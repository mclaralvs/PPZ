while
-------------------------------------------------
# usar em situações em que não se sabe a quantidade de dados que deverão ser lidos

for
------------------------------------------------
# não precisa declarar variável

exemplo de criação de função
-------------------------------------------------
# usamos para dividir o código em pedaços
## melhor testar a função e depois fazê-lo por inteiro
## minimiza erros

# fica na memória e pode usar quantas vezes quiser

# não precisa de input: só colocar o valor dentro dos parênteses

# não precisa de print: o return já mostra o resultado
## print apenas mostra o resultado na tela
## return guarda o valor
## posso ter vários returns mas ele para de executar após 1

#def fat(n):
    k = 1
    fat = 1
    while k <= n:
        fat = fat * k
        k = k + 1
    return fat

softwares livres
-------------------------------------------------
# Software que respeita a liberdade e senso de comunidade dos usuários

# A liberdade de executar o programa como você desejar, para qualquer propósito (liberdade 0).

# A liberdade de estudar como o programa funciona, e adaptá-lo às suas necessidades (liberdade 1). Para tanto, acesso ao código-fonte é um pré-requisito.

# A liberdade de redistribuir cópias de modo que você possa ajudar outros (liberdade 2).

# A liberdade de distribuir cópias de suas versões modificadas a outros (liberdade 3). Desta forma, você pode dar a toda comunidade a chance de beneficiar de suas mudanças. Para tanto, acesso ao código-fonte é um pré-requisito.

TDD
-------------------------------------------------
# Test Driven Development

# Boa prática de programação

# 1 - Diminui a abstração do problema quando você pensa em casos concretos para testar

# 2 - Se você trabalha em equipe, ou o código pe grande, uma alteração pode modificar o que já estava correto 

%s - imprime em texto
repr(variável) - transforma a variável num texto